<modification>
	<id>HTML Email Template: 4.2.1</id>
	<version>1.5.0 - 1.5.4.1</version>
	<author>opencart-templates.co.uk</author>	
	<vqmver>2.1.7</vqmver>
		
	<file name="system/startup.php">
        <operation>
            <search position="after"><![CDATA[
            require_once(DIR_SYSTEM . 'library/template.php');
            ]]></search>
            <add><![CDATA[
            require_once(DIR_SYSTEM . 'library/email_template.php');
            ]]></add>
        </operation>
	</file>
			
	<file name="system/library/template.php">
        <operation error="skip"><!-- allow template inherit: 1.5.1.3.1 -->
            <search position="replace"><![CDATA[
            final class Template {
            ]]></search>
            <add><![CDATA[
            class Template {
            ]]></add>
        </operation>
		<operation>
            <search position="replace" offset="2"><![CDATA[
            public function fetch($filename) {
            ]]></search>
            <add><![CDATA[
            /*
             * Allow for shared templates from admin because DIR_TEMPLATE is different.
             */ 
			public function fetch($filename, $prefix_dir = true) {
				if($prefix_dir){
					$file = DIR_TEMPLATE . $filename;
				} else {
					$file = $filename;
				}
            ]]></add>
        </operation>
	</file>
	
	<file name="catalog/model/account/address.php">
        <operation>
            <search position="before"><![CDATA[
            public function getAddress($address_id) {
            ]]></search>
            <add><![CDATA[
            /*
             * If the customer is not logged in and we need a way to get the address.
             */
			public function getAddressNotLoggedIn($address_id, $customer_id) {
				$address_query = $this->db->query("SELECT DISTINCT * FROM " . DB_PREFIX . "address WHERE address_id = '" . (int)$address_id . "' AND customer_id = '" . (int)$customer_id . "'");
		
				if ($address_query->num_rows) {
					$country_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "country` WHERE country_id = '" . (int)$address_query->row['country_id'] . "'");
					
					if ($country_query->num_rows) {
						$country = $country_query->row['name'];
						$iso_code_2 = $country_query->row['iso_code_2'];
						$iso_code_3 = $country_query->row['iso_code_3'];
						$address_format = $country_query->row['address_format'];
					} else {
						$country = '';
						$iso_code_2 = '';
						$iso_code_3 = '';	
						$address_format = '';
					}
					
					$zone_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "zone` WHERE zone_id = '" . (int)$address_query->row['zone_id'] . "'");
					
					if ($zone_query->num_rows) {
						$zone = $zone_query->row['name'];
						$code = $zone_query->row['code'];
					} else {
						$zone = '';
						$code = '';
					}		
					
					$address_data = array(
						'firstname'      => $address_query->row['firstname'],
						'lastname'       => $address_query->row['lastname'],
						'company'        => $address_query->row['company'],
						'address_1'      => $address_query->row['address_1'],
						'address_2'      => $address_query->row['address_2'],
						'postcode'       => $address_query->row['postcode'],
						'city'           => $address_query->row['city'],
						'zone_id'        => $address_query->row['zone_id'],
						'zone'           => $zone,
						'zone_code'      => $code,
						'country_id'     => $address_query->row['country_id'],
						'country'        => $country,	
						'iso_code_2'     => $iso_code_2,
						'iso_code_3'     => $iso_code_3,
						'address_format' => $address_format
					);
					
					return $address_data;
				} else {
					return false;	
				}
			}
            ]]></add>
        </operation>
	</file>
		
	<file name="catalog/model/tool/image.php">
        <operation>
            <search position="after"><![CDATA[
            class ModelToolImage extends Model {
            ]]></search>
            <add><![CDATA[
            /*
             * Image URL - Absolute 
             *
             * ????No idea why this is not in the core????
             */
            public function get($filename) {
				if (!file_exists(DIR_IMAGE . $filename) || !is_file(DIR_IMAGE . $filename)) {
					return;
				} 
								
				if (isset($this->request->server['HTTPS']) && (($this->request->server['HTTPS'] == 'on') || ($this->request->server['HTTPS'] == '1'))) {
					return HTTPS_IMAGE . $filename;
				} else {
					return HTTP_IMAGE . $filename;
				}	
			}
            ]]></add>
        </operation>
	</file>
		
	<file name="catalog/model/account/customer_group.php">
        <operation error="skip">
            <search position="replace"><![CDATA[
            SELECT DISTINCT * FROM " . DB_PREFIX . "customer_group WHERE customer_group_id
            ]]></search>
            <add trim="true"><![CDATA[
			SELECT DISTINCT cg.*, cgd.* FROM " . DB_PREFIX . "customer_group cg LEFT JOIN " . DB_PREFIX . "customer_group_description cgd ON (cg.customer_group_id = cgd.customer_group_id) WHERE cg.customer_group_id
            ]]></add>
        </operation> 
    </file>
                  
	<file name="catalog/model/account/customer.php">
        <operation>
            <search position="after"><![CDATA[
            $this->language->load('mail/customer');
            ]]></search>
            <add><![CDATA[
		// MODULE: emailtemplate
			$template = new EmailTemplate($this->request, $this->registry);			
			
			$full_name = $data['firstname'] . ' ' . $data['lastname'];
			$template->setTitle(sprintf($this->language->get('text_welcome'), $full_name, $this->config->get('config_name')));			
			
			$template->appendDataLanguage($this->language, array(
            	'text_email',
            	'text_telephone',
            	'text_fax',
            	'text_address',
            	'text_company',
            	'text_newsletter',
            	'text_password',
            	'text_name',
            	'text_services',
            	'text_customer_group',
            	'text_thanks'
            ));
            			
			$template->appendData(array(
				'firstname'  => $data['firstname'],
				'lastname' 	 => $data['lastname'],
				'email' 	 => $data['email'],
				'telephone'  => $data['telephone'],
				'company' 	 => $data['company'],
				'fax' 		 => $data['fax'],
				'newsletter' => $this->language->get((isset($data['newsletter']) && $data['newsletter'] == 1) ? 'text_yes' : 'text_no'),
				'account_login' => $this->url->link('account/login', '', 'SSL'),
				'customer_group' => (isset($customer_group_info['name'])) ? $customer_group_info['name'] : ''
			));
						
			$this->load->model('account/address');
			$customer_address = $this->model_account_address->getAddressNotLoggedIn($address_id, $customer_id);			
			if ($customer_address['address_format']) {
				$format = $customer_address['address_format'];
			} else {
				$format = '{firstname} {lastname}' . "\n" . '{company}' . "\n" . '{address_1}' . "\n" . '{address_2}' . "\n" . '{city} {postcode}' . "\n" . '{zone}' . "\n" . '{country}';
			}
			$find = array(
	  			'{firstname}',
	  			'{lastname}',
	  			'{company}',
      			'{address_1}',
      			'{address_2}',
     			'{city}',
      			'{postcode}',
      			'{zone}',
				'{zone_code}',
      			'{country}'
			);	
			$replace = array(
	  			'firstname' => $customer_address['firstname'],
	  			'lastname'  => $customer_address['lastname'],
	  			'company'   => $customer_address['company'],
      			'address_1' => $customer_address['address_1'],
      			'address_2' => $customer_address['address_2'],
      			'city'      => $customer_address['city'],
      			'postcode'  => $customer_address['postcode'],
      			'zone'      => $customer_address['zone'],
				'zone_code' => $customer_address['zone_code'],
      			'country'   => $customer_address['country']  
			);
			$template->data['address'] = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));
				
			// Backwards compatible with pre OC_ver 1.5.3
            if((isset($customer_group_info['approval']) && $customer_group_info['approval']) || $this->config->get('config_customer_approval')){
            	$template->data['customer_text'] = $this->language->get('text_approval');
            } else {
            	$template->data['customer_text'] = $this->language->get('text_login');
            }
            				
			if($template->getConfig('emailtemplate_customer_password')) {
				$template->data['password'] = $data['password'];
			} 
		
			$html = $template->fetch('customer_register.tpl', '_mail.tpl');
		// END MODULE: emailtemplate
            ]]></add>
        </operation>               
        <operation>
            <search position="replace"><![CDATA[
            $message = sprintf($this->language->get('text_welcome'), $this->config->get('config_name')) . "\n\n";
            ]]></search>
            <add><![CDATA[
            $message = sprintf($this->language->get('text_welcome'), $full_name, $this->config->get('config_title')) . "\n\n";
            ]]></add>
        </operation>
        <operation>
            <search position="before" index="1"><![CDATA[
            $mail->send();
            ]]></search>
            <add><![CDATA[
            $mail->setHTML($html);
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            if ($this->config->get('config_account_mail')) {
            ]]></search>
            <add><![CDATA[
            if((isset($customer_group_info['approval']) && $customer_group_info['approval']) || $this->config->get('config_customer_approval')){
	            $template->data['text_approve'] = $this->language->get('text_approve');
	            $template->data['account_approve'] = (defined('HTTP_ADMIN') ? HTTP_ADMIN : HTTP_SERVER.'admin/') . 'index.php?route=sale/customer&filter_approved=0';
            }
            
            $html = $template->fetch('customer_register_admin.tpl', '_mail.tpl');
            
            $mail->setSubject("ADMIN - ".html_entity_decode($subject, ENT_QUOTES, 'UTF-8'));
			$mail->setHTML($html);
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            public function editNewsletter($newsletter) {
            ]]></search>
            <add><![CDATA[
            public function editNewsletterUnsubscribe($email) {
            
            	$query = $this->db->query("SELECT * FROM ".DB_PREFIX."customer WHERE MD5(email) = '" . $this->db->escape($email) . "'");
		
				if ($query->num_rows) {
					$this->db->query("UPDATE ".DB_PREFIX."customer SET newsletter = '0' WHERE customer_id = " . (int)$query->row['customer_id'] . "");
					
					return $query->row;
				} else {
					return false;
				}
            }
            ]]></add>
        </operation>
	</file>
	
	<file name="catalog/controller/account/forgotten.php">
        <operation>
            <search position="before"><![CDATA[
            $mail = new Mail();
            ]]></search>
            <add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);
            
            $template->setTitle(sprintf($this->language->get('text_greeting'), $this->config->get('config_name')));
			
			$template->appendDataLanguage($this->language, array(
            	'text_login',
            	'text_password'
            ));
			
			$template->appendData(array(
				'password' => $password,
				'account_login' => $this->url->link('account/login', '', 'SSL')
			));
						
			$html = $template->fetch('customer_forgotten.tpl', '_mail.tpl');
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $mail->send();
            ]]></search>
            <add><![CDATA[
            $mail->setHtml($html);
            $mail->send();
            ]]></add>
        </operation>
	</file>
	
	<file name="catalog/model/checkout/order.php">
        <operation>
            <search position="after"><![CDATA[
            'customer_id'             => $order_query->row['customer_id'],
            ]]></search>
            <add><![CDATA[
            'customer_group_id'       => $order_query->row['customer_group_id'],
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $order_product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'");
            ]]></search>
            <add><![CDATA[
            $this->load->model('tool/image');
            
			$template = new EmailTemplate($this->request, $this->registry);
			
            if($template->getConfig('emailtemplate_order_picture')){
            	$order_product_query = $this->db->query("SELECT op.*, p.image FROM " . DB_PREFIX . "order_product op LEFT JOIN " . DB_PREFIX . "product p ON (p.product_id = op.product_id) WHERE order_id = '" . (int)$order_id . "'");
            }else{
            	$order_product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'");
            }
            
            if(isset($order_info['customer_group_id'])){
            	$this->load->model('account/customer_group');
				$customer_group_info = $this->model_account_customer_group->getCustomerGroup($order_info['customer_group_id']);
            }
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $template = new Template();
            ]]></search>
            <add><![CDATA[
			$template->setTitle(sprintf($language->get('text_new_subject'), html_entity_decode($order_info['store_name'], ENT_QUOTES, 'UTF-8'), $order_id));			
				
			$template->appendDataLanguage($language, array(
            	'text_new_comment',
            	'text_new_instruction',
            	'text_new_received',
            	'text_new_order_status',
            	'text_new_products',
            	'text_new_order_total',
            	'text_order_link',
            	'text_customer_group'
            ));
            			
			$template->appendData(array(
				'customer_group' => (isset($customer_group_info['name'])) ? $customer_group_info['name'] : '',
				'new_order_status' => $order_status,
				'order_id' => $order_id
			));
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $template->data['products'][] = array(
            ]]></search>
            <add><![CDATA[            
            if (isset($product['image'])) {
				$image = $this->model_tool_image->resize($product['image'], 50, 50);
			} else {
				$image = '';
			}
			
			$template->data['products'][] = array(
				'image'     => $image,
			]]></add>
        </operation>
        <operation error="skip">
            <search position="replace" index="1"><![CDATA[
            $template->data['logo'] = HTTP_IMAGE . $this->config->get('config_logo');
            ]]></search>
            <add></add>
        </operation>
        <operation error="skip">
            <search position="replace"><![CDATA[
            $mail->addAttachment(DIR_IMAGE . $this->config->get('config_logo'), md5(basename($this->config->get('config_logo'))));
            ]]></search>
            <add></add>
        </operation>
        <operation error="skip"><!-- 1.5.1.3.1 -->
            <search position="replace" index="1"><![CDATA[
            $template->data['logo'] = 'cid:' . md5(basename($this->config->get('config_logo')));
            ]]></search>
            <add></add>
        </operation>
		<operation error="skip">
            <search position="replace" offset="4" index="1"><![CDATA[
            if ($comment && $notify) {
            ]]></search>
            <add><![CDATA[
            if ($order_info['comment']) {
            	$template->data['comment'] = str_replace(array("\r\n", "\r", "\n"), "<br />", $order_info['comment']);
            } else {
            	$template->data['comment'] = '';
            } 
            
            if ($comment && $notify && $template->data['comment'] != $comment) {
				$template->data['instruction'] = str_replace(array("\r\n", "\r", "\n"), "<br />", $comment);
			} else {
				$template->data['instruction'] = '';
			}                        	
            ]]></add>
        </operation>
        <operation>
            <search position="replace" offset="4"><![CDATA[
            if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/mail/order.tpl')) {
            ]]></search>
            <add><![CDATA[
            $html = $template->fetch('order_customer.tpl', '_mail.tpl');
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $subject = sprintf($language->get('text_new_subject'), html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8'), $order_id);
            ]]></search>
            <add><![CDATA[
			$subject = "ADMIN - " . sprintf($language->get('text_new_subject'), html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8'), $order_id);
			
			$template->appendData(array(
				'order_link' => (defined('HTTP_ADMIN') ? HTTP_ADMIN : HTTP_SERVER.'admin') . 'index.php?route=sale/order/info&order_id=' . $order_id
			));
			
			$html = $template->fetch('order_admin.tpl', '_mail.tpl');
            ]]></add>
        </operation>
        <operation>
            <search position="before" index="2"><![CDATA[
            $mail->send();
            ]]></search>
            <add><![CDATA[
            $mail->setHtml($html);
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="replace"><![CDATA[
            'value' => (strlen($value) > 20 ? utf8_substr($value, 0, 20) . '..' : $value)
            ]]></search>
            <add><![CDATA[
            'value' => (strlen($value) > $template->getConfig('emailtemplate_body_product_option_length') ? utf8_substr($value, 0, $template->getConfig('emailtemplate_body_product_option_length')) . '..' : $value)
            ]]></add>
        </operation>       
        <operation error="skip"><!-- 1.5.1.3 -->
            <search position="replace"><![CDATA[
            'value' => (strlen($option['value']) > 20 ? substr($option['value'], 0, 20) . '..' : $option['value'])
            ]]></search>
            <add><![CDATA[
            'value' => (strlen($option['value']) > $template->getConfig('emailtemplate_body_product_option_length') ? utf8_substr($option['value'], 0, $template->getConfig('emailtemplate_body_product_option_length')) . '..' : $option['value'])
            ]]></add>
        </operation>        
	</file>
	
	<file name="catalog/controller/information/contact.php">
        <operation>
            <search position="before"><![CDATA[
            $mail = new Mail();
            ]]></search>
            <add><![CDATA[
			// MODULE: emailtemplate
			$template = new EmailTemplate($this->request, $this->registry);			
						
			$template->setTitle($this->language->get('heading_title'));			
			
			$tracking = array();
			$tracking['ip_address'] = $this->request->server['REMOTE_ADDR'];
			$tracking['user_agent'] = (isset($this->request->server['HTTP_USER_AGENT'])) ? $this->request->server['HTTP_USER_AGENT'] : '';
			$tracking['accept_language'] = (isset($this->request->server['HTTP_ACCEPT_LANGUAGE'])) ? $this->request->server['HTTP_ACCEPT_LANGUAGE'] : '';
			if (!empty($this->request->server['HTTP_X_FORWARDED_FOR'])) {
				$tracking['remote_host'] = $this->request->server['HTTP_X_FORWARDED_FOR'];
			} elseif(!empty($this->request->server['HTTP_CLIENT_IP'])) {
				$tracking['remote_host'] = $this->request->server['HTTP_CLIENT_IP'];
			} else {
				$tracking['remote_host'] = '';
			}
					
			$template->appendDataLanguage($this->language, array(
            	'ip_address',
            	'user_agent',
            	'accept_language',
            	'entry_name' 	=> 'text_name',
            	'entry_email' 	=> 'text_email',
            	'entry_enquiry' => 'text_enquiry'
            ));
            
			$template->appendData(array(
            	'name' 		=> $this->request->post['name'],
				'email' 	=> $this->request->post['email'],
				'enquiry' 	=> strip_tags(html_entity_decode($this->request->post['enquiry'], ENT_QUOTES, 'UTF-8')),
				'tracking' 	=> $tracking
			));
			    	
			$html = $template->fetch('contact_admin.tpl', '_mail.tpl');
			// END MODULE: emailtemplate
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $mail->send();
            ]]></search>
            <add><![CDATA[
            $mail->setHtml($html);
            $mail->send();
            
            // Send a copy to the customer?
            if($template->getConfig('emailtemplate_contactus_customer')) {
            	
				$html = $template->fetch('contact.tpl', '_mail.tpl');
				
				$mail->setTo($this->request->post['email']);
		  		$mail->setFrom($this->config->get('config_email'));
		  		$mail->setSender($this->config->get('config_title'));
		  		$mail->setSubject(html_entity_decode(sprintf($this->language->get('email_subject'), $this->request->post['name']), ENT_QUOTES, 'UTF-8'));
				$mail->setHtml($html);
				$mail->send();
			}
            ]]></add>
        </operation>
	</file>
	
	
	<file name="catalog/model/affiliate/affiliate.php">
        <operation>
            <search position="before"><![CDATA[
            $mail = new Mail();
            ]]></search>
            <add><![CDATA[
            // MODULE: emailtemplate
			$template = new EmailTemplate($this->request, $this->registry);
            
            $template->setTitle(sprintf($this->language->get('text_welcome'), $this->config->get('config_name')));
            
            $template->appendDataLanguage($this->language, array(
            	'text_approval',
            	'text_services',
            	'text_thanks'
            ));
			
			$template->appendData(array(
				'url_affiliate_login' => $this->url->link('affiliate/login', '', 'SSL')
			));
						
			$html = $template->fetch('affiliate_register.tpl', '_mail.tpl');		
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $mail->send();
            ]]></search>
            <add><![CDATA[
            $mail->setHtml($html);
            $mail->send();
            
            // Send a copy to admin
			$html = $template->fetch('affiliate_register_admin.tpl', '_mail.tpl');
			
			$mail->setTo($this->config->get('config_email'));
	  		$mail->setFrom($data['email']);
	  		$mail->setSender($data['firstname'] . " " . $data['lastname']);
	  		$mail->setSubject("ADMIN - " . html_entity_decode($subject, ENT_QUOTES, 'UTF-8'));
			$mail->setHtml($html);
			$mail->send();
            ]]></add>
        </operation>
	</file>
	
	<file name="catalog/controller/affiliate/forgotten.php">
        <operation>
            <search position="before"><![CDATA[
            $mail = new Mail();
            ]]></search>
            <add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);
            
            $template->setTitle(sprintf($this->language->get('text_greeting'), $this->config->get('config_name')));

			$template->appendDataLanguage($this->language, array(
            	'text_login',
            	'text_password'
            ));
			
			$template->appendData(array(
				'password' => $password,
				'account_login' => $this->url->link('affiliate/login', '', 'SSL')
			));
			
			$html = $template->fetch('affiliate_forgotten.tpl', '_mail.tpl');
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $mail->send();
            ]]></search>
            <add><![CDATA[
            $mail->setHtml($html);
            $mail->send();
            ]]></add>
        </operation>
	</file>
	
	
	<file name="catalog/model/checkout/voucher.php">
        <operation>
            <search position="after"><![CDATA[
            $template->data['text_footer'] = $language->get('text_footer');
            ]]></search>
            <add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);
            $template->setTitle(sprintf($language->get('text_subject'), $voucher['from_name']));
            ]]></add>
        </operation>
        <operation error="skip"><!-- 1.5.0.5 -->
            <search position="replace"><![CDATA[
            $template->data['image'] = 'cid:' . basename($voucher['image']);
            ]]></search>
            <add><![CDATA[
            $template->data['image'] = HTTP_IMAGE . $voucher['image'];
            ]]></add>
        </operation>
        <operation error="skip"><!-- 1.5.1/1.5.1.3 -->
            <search position="replace"><![CDATA[
            $template->data['image'] = 'cid:' . md5(basename($voucher['image']));
            ]]></search>
            <add><![CDATA[
            $template->data['image'] = HTTP_IMAGE . $voucher['image'];
            ]]></add>
        </operation>
        <operation error="skip"><!-- Remove attachment -->
            <search position="replace"><![CDATA[
            $mail->addAttachment(DIR_IMAGE . $voucher['image'], md5(basename($voucher['image'])));
            ]]></search>
            <add></add>
        </operation>
        <operation>
            <search position="replace" offset="4"><![CDATA[
            if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/mail/voucher.tpl')) {
            ]]></search>
            <add><![CDATA[
            $html = $template->fetch('voucher_customer.tpl', '_mail.tpl');
            ]]></add>
        </operation>
	</file>
	
	<file name="catalog/controller/account/newsletter.php">
        <operation>
            <search position="after"><![CDATA[
            class ControllerAccountNewsletter extends Controller { 
            ]]></search>
            <add><![CDATA[
			public function unsubscribe() { 
		  		  		
		  		$this->language->load('account/newsletter');
		  		 
		  		$this->document->setTitle($this->language->get('heading_title'));
		  		
		  		if ($this->request->get['code']) {
		  			$this->load->model('account/customer');
		  				
		  			$result = $this->model_account_customer->editNewsletterUnsubscribe($this->request->get['code']);
					
		  			if($result) {
		  				$this->data['text_message'] = sprintf($this->language->get('success_unsubscribe'), $result['email']);
		  			} else {
		  				$this->data['text_message'] = $this->language->get('error_unsubscribe');
		  			}		
		  		} 
		  		  		
		  		$this->data['breadcrumbs'] = array();
		  		
		  		$this->data['breadcrumbs'][] = array(
		  				'text'      => $this->language->get('text_home'),
		  				'href'      => $this->url->link('common/home'),
		  				'separator' => false
		  		);
		  		
		  		$this->data['breadcrumbs'][] = array(
		  				'text'      => $this->language->get('text_newsletter'),
		  				'href'      => $this->url->link('account/newsletter', '', 'SSL'),
		  				'separator' => $this->language->get('text_separator')
		  		);
		  		
		  		$this->data['heading_title'] = $this->language->get('heading_unsubscribe');
		
		    	$this->data['button_continue'] = $this->language->get('button_continue');
		
		    	$this->data['continue'] = $this->url->link('common/home');
		  		
		  		if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/common/success.tpl')) {
					$this->template = $this->config->get('config_template') . '/template/common/success.tpl';
				} else {
					$this->template = 'default/template/common/success.tpl';
				}
		  		
		  		$this->children = array(
					'common/column_left',
		  			'common/column_right',
		  			'common/content_top',
		  			'common/content_bottom',
		  			'common/footer',
		  			'common/header'
		  		);
		  		
		  		$this->response->setOutput($this->render());
		  	}
            ]]></add>
        </operation>
	</file>
	
	<file name="catalog/model/catalog/review.php">
		<operation>
			<search position="after" offset="1"><![CDATA[
			public function addReview($product_id, $data) {
			]]></search>
			<add><![CDATA[
			$review_id = $this->db->getLastId();
			
			$this->load->model('catalog/product');

			$product_info = $this->model_catalog_product->getProduct($product_id);
			
			$template = new EmailTemplate($this->request, $this->registry);

            $template->setTitle(sprintf($this->language->get('text_subject'), $product_info['name']));

			$template->appendDataLanguage($this->language, array(
            	'text_product',
            	'text_author',
            	'text_rating',
            	'text_message',
            	'text_approve'
            ));

			$template->appendData(array(
				'review_author' => $data['name'],
				'review_rating' => $data['rating'],
				'review_message' => $data['text'],
				'product_name' => $product_info['name'],
				'product_link' => $this->url->link('product/product', 'product_id=' . $this->request->get['product_id']),
				'review_approve' => (defined('HTTP_ADMIN') ? HTTP_ADMIN : HTTP_SERVER.'admin') . 'index.php?route=catalog/review/update&review_id=' . $review_id
			));

			$html = $template->fetch('product_review.tpl', '_mail.tpl');
			
			$mail = new Mail(); 
			$mail->protocol = $this->config->get('config_mail_protocol');
			$mail->parameter = $this->config->get('config_mail_parameter');
			$mail->hostname = $this->config->get('config_smtp_host');
			$mail->username = $this->config->get('config_smtp_username');
			$mail->password = $this->config->get('config_smtp_password');
			$mail->port = $this->config->get('config_smtp_port');
			$mail->timeout = $this->config->get('config_smtp_timeout');
			$mail->setTo($this->config->get('config_email'));
			$mail->setFrom($this->config->get('config_email'));
			$mail->setSender($this->config->get('config_name'));
			$mail->setSubject(sprintf($this->language->get('text_subject'), $product_info['name']));
			$mail->setHtml($html);
			$mail->send();
			
			// Send to additional alert emails
			$emails = explode(',', $this->config->get('config_alert_emails'));
			
			foreach ($emails as $email) {
				if ($email && preg_match('/^[^\@]+@.*\.[a-z]{2,6}$/i', $email)) {
					$mail->setTo($email);
					$mail->send();
				}
			}
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/model/account/return.php">
		<operation>
			<search position="after" offset="1"><![CDATA[
			public function addReturn($data) {
			]]></search>
			<add><![CDATA[
			$return_id = $this->db->getLastId();
			
			// HTML email
			$template = new EmailTemplate($this->request, $this->registry);
            
            $template->setTitle(sprintf($this->language->get('text_subject'), $this->config->get('config_name')));

			$template->appendDataLanguage($this->language, array(
            	'text_subject',
            	'text_return_detail',
            	'text_firstname',
            	'text_lastname',
            	'text_email',
            	'text_telephone',
            	'text_order_id',
            	'text_order_date',
            	'text_products',
            	'text_product',
            	'text_model',
            	'text_quantity',
            	'text_reason',
            	'text_opened',
            	'text_comment',
            	'text_action'
            ));
				
			$this->load->model('localisation/return_reason');

			$return_products = array();

			// Backwards compatabile with 1.5.1.3
			if(isset($this->request->post['return_product'])){
			
				foreach ($this->request->post['return_product'] as $return_product) {
					$return_reason_info = $this->model_localisation_return_reason->getReturnReason($return_product['return_reason_id']);
					
					if(isset($return_product['product'])){
						$name = $return_product['product'];
					} elseif(isset($return_product['name'])){
						$name = $return_product['name'];
					} else {
						$name = '';
					}
					
					$return_products[] = array(
						'name' => $name,
						'model' => $return_product['model'],
						'quantity' => $return_product['quantity'],
						'reason' => ($return_reason_info) ? $return_reason_info['name'] : '',
						'opened' => $return_product['opened'] ? $this->language->get('text_yes') : $this->language->get('text_no'),
						'comment' => $return_product['comment']
					);
				}
				
			} else {
			
				$return_reason_info = $this->model_localisation_return_reason->getReturnReason($data['return_reason_id']);

				$return_products[] = array(
					'name' => $data['product'],
					'model' => $data['model'],
					'quantity' => $data['quantity'],
					'reason' => ($return_reason_info) ? $return_reason_info['name'] : '',
					'opened' => $data['opened'] ? $this->language->get('text_yes') : $this->language->get('text_no'),
					'comment' => $data['comment']
				);
				
			}

			$template->appendData(array(
				'text_greeting' 	=> sprintf($this->language->get('text_greeting'), $this->config->get('config_name')),
				'firstname' 		=> $data['firstname'],
				'lastname' 			=> $data['lastname'],
				'email' 			=> $data['email'],
				'telephone' 		=> $data['telephone'],
				'order_id' 			=> $data['order_id'],
				'order_date' 		=> $data['date_ordered'],
				'comment' 			=> (isset($data['comment'])) ? $data['comment'] : '',
				'return_products' 	=> $return_products,
				'return_link' 		=> (defined('HTTP_ADMIN') ? HTTP_ADMIN : HTTP_SERVER.'admin') . 'index.php?route=sale/return/info&return_id=' . $return_id
			));
			
			$html = $template->fetch('return_admin.tpl', '_mail.tpl');
						
			$mail = new Mail(); 
			$mail->protocol = $this->config->get('config_mail_protocol');
			$mail->parameter = $this->config->get('config_mail_parameter');
			$mail->hostname = $this->config->get('config_smtp_host');
			$mail->username = $this->config->get('config_smtp_username');
			$mail->password = $this->config->get('config_smtp_password');
			$mail->port = $this->config->get('config_smtp_port');
			$mail->timeout = $this->config->get('config_smtp_timeout');
			$mail->setTo($this->config->get('config_email'));
			$mail->setFrom($this->config->get('config_email'));
			$mail->setSender($this->config->get('config_name'));
			$mail->setSubject(sprintf($this->language->get('text_subject'), $this->config->get('config_name')));
			$mail->setHtml($html);
			$mail->send();
			
			// Send to additional alert emails
			$emails = explode(',', $this->config->get('config_alert_emails'));
			
			foreach ($emails as $email) {
				if ($email && preg_match('/^[^\@]+@.*\.[a-z]{2,6}$/i', $email)) {
					$mail->setTo($email);
					$mail->send();
				}
			}
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/controller/account/order.php">
		<operation>
			<search position="replace"><![CDATA[
			nl2br($result['comment'])
			]]></search>
			<add><![CDATA[
			(strcmp($result['comment'], strip_tags($html_str = html_entity_decode($result['comment'], ENT_QUOTES, 'UTF-8'))) == 0) ? nl2br($result['comment']) : $html_str
			]]></add>
		</operation>
	</file>
</modification>