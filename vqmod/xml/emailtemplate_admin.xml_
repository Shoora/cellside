<modification>
	<id>HTML Email Template: 4.2.1 - Admin</id>
	<version>1.5.0 - 1.5.4.1</version>
	<author>opencart-templates.co.uk</author>	
	<vqmver>2.1.7</vqmver>
		
	<file name="admin/controller/extension/module.php">
        <operation error="abort">
            <search position="replace" offset="7"><![CDATA[
            require_once(DIR_APPLICATION . 'controller/module/' . $this->request->get['extension'] . '.php');
            ]]></search>
            <add></add>
        </operation>
        <operation error="abort">
            <search position="before"><![CDATA[
            $this->model_setting_extension->install('module', $this->request->get['extension']);
            ]]></search>
            <add><![CDATA[
            // Move position of code to allow for more control when extending.
            // E.g check that the admin has permission to delete module. 
            // No point reporting this as a bug because Daniel just tells you everytime to stop wating his time. 
			require_once(DIR_APPLICATION . 'controller/module/' . $this->request->get['extension'] . '.php');
			
			$class = 'ControllerModule' . str_replace('_', '', $this->request->get['extension']);
			$class = new $class($this->registry);
			
			if (method_exists($class, 'install')) {
				$class->install();
			}
            ]]></add>
        </operation>
        <operation error="abort">
            <search position="before"><![CDATA[
            $this->model_setting_extension->uninstall('module', $this->request->get['extension']);
            ]]></search>
            <add><![CDATA[
            // Move position of code to allow for more control when extending.
            // E.g check that the admin has permission to delete module. 
            // No point reporting this as a bug because Daniel just tells you everytime to stop wating his time. 
			require_once(DIR_APPLICATION . 'controller/module/' . $this->request->get['extension'] . '.php');

			$class = 'ControllerModule' . str_replace('_', '', $this->request->get['extension']);
			$class = new $class($this->registry);

			if (method_exists($class, 'uninstall')) {
				$class->uninstall();
			}
            ]]></add>
        </operation>
	</file>
		
	<file name="admin/model/setting/setting.php">
        <operation error="skip"><!-- bugfix: 1.5.1.3.1 -->
            <search position="replace"><![CDATA[
            $data[$result['key']] = unserialize($setting['value']);
            ]]></search>
            <add><![CDATA[
            $data[$result['key']] = unserialize($result['value']);
            ]]></add>
        </operation>
	</file>
			
	<file name="admin/model/tool/image.php">
        <operation>
            <search position="after"><![CDATA[
            class ModelToolImage extends Model {
            ]]></search>
            <add><![CDATA[
            /*
             * Image URL - Absolute 
             */
            public function get($filename) {
				if (!file_exists(DIR_IMAGE . $filename) || !is_file(DIR_IMAGE . $filename)) {
					return;
				} 
								
				if (isset($this->request->server['HTTPS']) && (($this->request->server['HTTPS'] == 'on') || ($this->request->server['HTTPS'] == '1'))) {
					return HTTPS_IMAGE . $filename;
				} else {
					return HTTP_IMAGE . $filename;
				}	
			}
            ]]></add>
        </operation>
	</file>
	
	<file name="admin/controller/sale/order.php">
        <operation error="skip">
            <search position="replace"><![CDATA[
            nl2br($result['comment'])
            ]]></search>
            <add trim="true"><![CDATA[
                 (strcmp($result['comment'], strip_tags($html_str = html_entity_decode($result['comment'], ENT_QUOTES, 'UTF-8'))) == 0) ? nl2br($result['comment']) : $html_str
            ]]></add>
        </operation>
		<operation error="skip"> <!-- backwards compatibility ver 1.5.1 -->
            <search position="replace"><![CDATA[
            $result['comment']
            ]]></search>
            <add trim="true"><![CDATA[
                  (strcmp($result['comment'], strip_tags($html_str = html_entity_decode($result['comment'], ENT_QUOTES, 'UTF-8'))) == 0) ? nl2br($result['comment']) : $html_str
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            nl2br($order_info['comment'])
            ]]></search>
            <add trim="true"><![CDATA[
            (strcmp($order_info['comment'], strip_tags($html_str = html_entity_decode($order_info['comment'], ENT_QUOTES, 'UTF-8'))) == 0) ? nl2br($order_info['comment']) : $html_str
            ]]></add>
        </operation>
    </file>
	
	<file name="admin/model/sale/order.php">
        <operation>
            <search position="after"><![CDATA[
            if ($data['notify']) {
            ]]></search>
            <add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $message .= $language->get('text_footer');
            ]]></search>
            <add><![CDATA[            
			// Overwrite config with store data
			$this->load->model('setting/setting');
			$this->load->model('setting/store');
			$store_info = $this->model_setting_store->getStore($order_info['store_id']);
			$store_settings_config = $this->model_setting_setting->getSetting("config", $order_info['store_id']);
			$template->populateStoreData(array_merge($store_settings_config, $store_info, $order_info));
			
			// Overwrite config with email data
			$et_store = $this->model_setting_setting->getSetting("emailtemplate", $order_info['store_id']);
			$template->populateEmailData($et_store);
			
			$template->setThemeDir('mail');            
            $template->setTitle($subject);
            		
			$template->appendDataLanguage($language, array(
            	'text_order',
            	'text_date_added',
            	'text_order_status',
            	'text_link' =>'text_invoice',
            	'text_comment',
            	'text_footer'
            ));
			
			$template->appendData(array(
				'comment' => ($data['comment']) ? html_entity_decode($data['comment'], ENT_QUOTES, 'UTF-8') : '',
				'date_added' => date($language->get('date_format_short'), strtotime($order_info['date_added'])),
				'invoice' => html_entity_decode($order_info['store_url'] . 'index.php?route=account/order/info&order_id=' . $order_id, ENT_QUOTES, 'UTF-8'),
				'order_id' => $order_id,
				'customer_id' => $order_info['customer_id'],
				'order_status' => $order_status_query->row['name']
			));
			
			$html = $template->fetch('order_update.tpl', '_mail.tpl');
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $mail->setFrom($this->config->get('config_email'));
            ]]></search>
            <add><![CDATA[
            $mail->setFrom($store_settings_config['config_email']);
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $mail->send();
            ]]></search>
            <add><![CDATA[
            $mail->setHTML($html);
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="replace"><![CDATA[
            comment = '" . $this->db->escape(strip_tags($data['comment'])) . "'
            ]]></search>
            <add trim="true"><![CDATA[
            comment = '" . $this->db->escape($data['comment']) . "'
            ]]></add>
        </operation>
	</file>
	
	<file name="admin/view/template/sale/order_info.tpl">
        <operation>
            <search position="replace" index="1"><![CDATA[
            <script type="text/javascript"><!--
            ]]></search>
            <add><![CDATA[
            <script type="text/javascript" src="view/javascript/ckeditor/ckeditor.js"></script>
			<script type="text/javascript"><!--
			CKEDITOR.replace('comment', {
				filebrowserImageBrowseUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',
				filebrowserUploadUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',
				filebrowserImageUploadUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>'
			});
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="after"><![CDATA[
            $('#button-history').live('click', function() {
            ]]></search>
            <add><![CDATA[
            // Force CKEDITOR instance in the form to update their respective fields
            CKEDITOR.instances.comment.updateElement();
            ]]></add>
        </operation>
        <operation error="skip"><!-- old versions of OC -->
            <search position="after"><![CDATA[
            function history() {
            ]]></search>
            <add><![CDATA[
            // Force CKEDITOR instance in the form to update their respective fields
            CKEDITOR.instances.comment.updateElement();
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
            $('textarea[name=\'comment\']').val('');
            ]]></search>
            <add><![CDATA[
            // Clear CKEDITOR data
            CKEDITOR.instances.comment.setData('');
            ]]></add>
        </operation>
	</file>
	
	<file name="admin/controller/sale/contact.php">
        <operation>
            <search position="after"><![CDATA[
            $message .= '</html>' . "\n";
            ]]></search>
            <add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);
            
			// Overwrite config with store data
			$this->load->model('setting/setting');
			$store_settings_config = $this->model_setting_setting->getSetting("config", $this->request->post['store_id']);
						
			$template->populateStoreData(array_merge($store_settings_config, $store_info));
			
			// Overwrite config with email data
			$et_store = $this->model_setting_setting->getSetting("emailtemplate", $this->request->post['store_id']);
			
			$template->populateEmailData($et_store);
			
			$template->setThemeDir('mail');
			
			// Load language based on the store selected
			$this->load->model('localisation/language');
			
			$language = $this->language; // save current lang           
			
			foreach($this->model_localisation_language->getLanguages() as $lang){				
				if($lang['code'] == $store_settings_config['config_language']){
					$language = new Language($lang['directory']);
					$language->load("sale/contact");
				}
			}			
			            
            $template->appendData(array(
				'body' => html_entity_decode($this->request->post['message'], ENT_QUOTES, 'UTF-8')
			));
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $mail->setFrom($this->config->get('config_email'));
            ]]></search>
            <add><![CDATA[
            $mail->setFrom($store_settings_config['config_email']);
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $mail->setHtml($message);
            ]]></search>
            <add><![CDATA[
            $mail->setText(strip_tags($this->request->post['message']));
             
            if($template->getConfig('emailtemplate_unsubscribe') && in_array($this->request->post['to'], array('newsletter', 'customer_all', 'customer_group', 'customer'))) {
            	$store_url = (isset($store_info['url'])) ? $store_info['url'] : HTTP_CATALOG;
            	$template->data['unsubscribe'] = sprintf($language->get('text_unsubscribe'), $store_url . 'index.php?route=account/newsletter/unsubscribe&code='.md5($email));
            }
			$html = $template->fetch('newsletter.tpl', '_mail.tpl');
			
			$mail->setHtml($html);
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="replace"><![CDATA[
            $mail->addAttachment($attachment['path'], $attachment['filename']);
            ]]></search>
            <add></add>
        </operation>
        <operation error="skip"><!-- fix bug in old versions of OC 1.5.2.1 -->
            <search position="replace"><![CDATA[
            'filter_customer_group_id' => $this->request->post['filter_customer_group_id'],
            ]]></search>
            <add><![CDATA[
            'filter_customer_group_id' => $this->request->post['customer_group_id'],
            ]]></add>
        </operation>
	</file>
	
	<file name="admin/model/sale/voucher.php">
        <operation>
            <search position="after"><![CDATA[
            $template = new Template();	
            ]]></search>
            <add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);
            
			// Overwrite config with store data
			$this->load->model('setting/setting');
			$this->load->model('setting/store');
			$store_info = $this->model_setting_store->getStore($order_info['store_id']);
			$store_settings_config = $this->model_setting_setting->getSetting("config", $order_info['store_id']);
			$template->populateStoreData(array_merge($store_settings_config, $store_info));
			
			// Overwrite config with email data
			$et_store = $this->model_setting_setting->getSetting("emailtemplate", $order_info['store_id']);
			$template->populateEmailData($et_store);
			
			$template->setThemeDir('mail');
            ]]></add>
        </operation>
        <operation error="skip"><!-- 1.5.0.5 -->
            <search position="replace"><![CDATA[
            $template->data['image'] = 'cid:' . basename($voucher_theme_info['image']);
            ]]></search>
            <add><![CDATA[
            $template->data['image'] = HTTP_IMAGE . $voucher_theme_info['image'];
            ]]></add>
        </operation>
        <operation error="skip"><!-- 1.5.1.3 -->
            <search position="replace"><![CDATA[
            $template->data['image'] = 'cid:' . md5(basename($voucher_theme_info['image']));
            ]]></search>
            <add><![CDATA[
            $template->data['image'] = HTTP_IMAGE . $voucher_theme_info['image'];
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="replace"><![CDATA[
            $mail->addAttachment(DIR_IMAGE . $voucher_theme_info['image'], md5(basename($voucher_theme_info['image'])));
            ]]></search>
            <add></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $mail->setHtml($template->fetch('mail/voucher.tpl'));	
            ]]></search>
            <add><![CDATA[
			$mail->setHtml($template->fetch('customer_voucher.tpl', '_mail.tpl'));
            ]]></add>
        </operation>
	</file>
	
	
	<file name="admin/model/sale/customer.php">
        <operation>
            <search position="replace"><![CDATA[
			$store_url = $store_info['url'] . 'index.php?route=account/login';
            ]]></search>
            <add><![CDATA[
            $store_url = $store_info['url'];
			$account_login = $store_info['url'] . 'index.php?route=account/login';
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
			$store_url = HTTP_CATALOG . 'index.php?route=account/login';
            ]]></search>
            <add><![CDATA[
            $store_url = HTTP_CATALOG;
			$account_login = HTTP_CATALOG . 'index.php?route=account/login';
            ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[
            $message .= $store_url . "\n\n";
            ]]></search>
            <add><![CDATA[
           	$message .= $account_login . "\n\n";
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $message .= $store_name;
            ]]></search>
            <add><![CDATA[                        
            $template = new EmailTemplate($this->request, $this->registry);
                        
            // Overwrite config with store data
			$this->load->model('setting/setting');
			$store_settings_config = $this->model_setting_setting->getSetting("config", $customer_info['store_id']);
			$template->populateStoreData(array_merge($store_settings_config, $store_info));
			
			// Overwrite config with email data
			$et_store = $this->model_setting_setting->getSetting("emailtemplate", $customer_info['store_id']);
			$template->populateEmailData($et_store);
			
			$template->setThemeDir('mail');
			
			$template->appendDataLanguage($this->language, array(
            	'text_approve_login',
            	'text_approve_services',
            	'text_approve_thanks'
            ));
            
			$template->appendData(array(
				'account_login' => $account_login,
				'text_welcome' => sprintf($this->language->get('text_approve_welcome'), $store_name)
			));
													
			$html = $template->fetch('customer_approve.tpl', '_mail.tpl');
            ]]></add>
        </operation>
		<operation>
            <search position="before"><![CDATA[
            $mail->send();
            ]]></search>
            <add><![CDATA[
            $mail->setHTML($html);
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $message .= sprintf($this->language->get('text_transaction_total'), $this->currency->format($this->getTransactionTotal($customer_id)));
            ]]></search>
            <add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);
            
			// Overwrite config with store data
			$this->load->model('setting/setting');
			$this->load->model('setting/store');
			if(!isset($store_info)){
				$store_info = $this->model_setting_store->getStore($customer_info['store_id']);
			}
			$store_settings_config = $this->model_setting_setting->getSetting("config", $customer_info['store_id']);
			$template->populateStoreData(array_merge($store_settings_config, $store_info));
			
			// Overwrite config with email data
			$et_store = $this->model_setting_setting->getSetting("emailtemplate", $customer_info['store_id']);
			$template->populateEmailData($et_store);
			
			$template->setThemeDir('mail');
			
			$template->appendData(array(
				'transaction_received' => sprintf($this->language->get('text_transaction_received'), $this->currency->format($amount, $this->config->get('config_currency'))),
				'transaction_total' => sprintf($this->language->get('text_transaction_total'), $this->currency->format($this->getTransactionTotal($customer_id)))
			));
												
			$html = $template->fetch('customer_transaction.tpl', '_mail.tpl');
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
            $message .= sprintf($this->language->get('text_reward_total'), $this->getRewardTotal($customer_id));
            ]]></search>
            <add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);
            
			// Overwrite config with store data
			$this->load->model('setting/setting');
			$this->load->model('setting/store');
			
			if(isset($store_info)){
				$store_id = $order_info['store_id'];
			} else {
				$store_id = $customer_info['store_id'];
			}
			
			$store_info = $this->model_setting_store->getStore($store_id);			
			$store_settings_config = $this->model_setting_setting->getSetting("config", $customer_info['store_id']);
			
			$template->populateStoreData(array_merge($store_settings_config, $store_info));
			
			// Overwrite config with email data
			$et_store = $this->model_setting_setting->getSetting("emailtemplate", $customer_info['store_id']);
			$template->populateEmailData($et_store);
			
			$template->setThemeDir('mail');
			
			$template->appendData(array(
				'reward_received' => sprintf($this->language->get('text_reward_received'), $points),
				'reward_total' => sprintf($this->language->get('text_reward_total'), $this->getRewardTotal($customer_id))
			));
						
			$html = $template->fetch('customer_reward.tpl', '_mail.tpl');
            ]]></add>
        </operation>
	</file>
	
	<file name="admin/model/sale/return.php">
        <operation>
            <search position="after"><![CDATA[
            $message .= $this->language->get('text_footer');
            ]]></search>
            <add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);
            
			// Overwrite config with store data
			$this->load->model('setting/setting');
			$this->load->model('setting/store');
			
			$order_query = $this->db->query("SELECT store_id FROM `" . DB_PREFIX . "order` WHERE `order_id` = '" . $return_query->row['order_id'] . "'");
			$store_id = (int)$order_query->row['store_id'];
			
			$store_info = $this->model_setting_store->getStore($store_id);			
			$store_settings_config = $this->model_setting_setting->getSetting("config", $store_id);
			
			$template->populateStoreData(array_merge($store_settings_config, $store_info));
			
			// Overwrite config with email data
			$et_store = $this->model_setting_setting->getSetting("emailtemplate", $store_id);
			$template->populateEmailData($et_store);
			
			$template->setThemeDir('mail');
			
			$template->appendDataLanguage($this->language, array(
            	'text_comment',
            	'text_date_added',
            	'text_footer',
            	'text_return_id' => 'text_return',
            	'text_return_status'
            ));
            
			$template->appendData(array(
				'return_id' => $return_id,
				'date_added' => date($this->language->get('date_format_short'), strtotime($return_query->row['date_added'])),
				'status' => $return_query->row['status'],
				'comment' => ($data['comment'] != '' ? str_replace(array("\r\n", "\r", "\n"), "<br />", $data['comment']) : false)
			));
												
			$html = $template->fetch('return_history.tpl', '_mail.tpl');
            ]]></add>
        </operation>
		<operation>
            <search position="before"><![CDATA[
            $mail->send();
            ]]></search>
            <add><![CDATA[
            $mail->setHTML($html);
            ]]></add>
        </operation>
	</file>
	
	<file name="admin/model/sale/affiliate.php">
        <operation>
            <search position="before"><![CDATA[
            $message .= $this->config->get('config_name');
            ]]></search>
            <add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);
            $template->setThemeDir('mail');
			
			$template->appendDataLanguage($this->language, array(
            	'text_approve_login',
            	'text_approve_services',
            	'text_approve_thanks'
            ));
            
			$template->appendData(array(
				'text_welcome' => sprintf($this->language->get('text_approve_welcome'), $this->config->get('config_name')),
				'affiliate_login' => HTTP_CATALOG . 'index.php?route=affiliate/login'
			));
									
			$html = $template->fetch('affiliate_approve.tpl', '_mail.tpl');
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[
			$message .= sprintf($this->language->get('text_transaction_total'), $this->currency->format($this->getTransactionTotal($affiliate_id), $this->config->get('config_currency')));
            ]]></search>
            <add><![CDATA[
            $template = new EmailTemplate($this->request, $this->registry);
            $template->setThemeDir('mail');
			
			$template->appendData(array(
				'text_received' => sprintf($this->language->get('text_transaction_received'), $this->currency->format($amount, $this->config->get('config_currency'))),
				'text_total' => sprintf($this->language->get('text_transaction_total'), $this->currency->format($this->getTransactionTotal($affiliate_id), $this->config->get('config_currency')))
			));
									
			$html = $template->fetch('affiliate_transaction.tpl', '_mail.tpl');
            ]]></add>
        </operation>
		<operation>
            <search position="before"><![CDATA[
            $mail->send();
            ]]></search>
            <add><![CDATA[
            $mail->setHTML($html);
            ]]></add>
        </operation>
	</file>
		
</modification>
